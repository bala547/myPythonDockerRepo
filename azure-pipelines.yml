trigger:
- none
 
resources:
- repo: self
 
variables:
  dockerRegistryServiceConnection: 'myazacrconnection'
  imageRepository: 'mypythondockerrepo'
  containerRegistry: 'myazacraks.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  vmImageName: 'ubuntu-latest'
 
stages:
- stage: CI_CD
  displayName: Build and Deploy Stage
  jobs:
  
  - job: BuildAndPush
    displayName: Build, Scan, and Push Docker Image
    pool:
      vmImage: $(vmImageName)
    steps:
 
    - task: Docker@2
      displayName: Build Docker image 
      inputs:
        command: build
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
        buildContext: $(Build.SourcesDirectory)
        arguments: --platform linux/amd64
 
    - task: Bash@3
      displayName: Install Trivy
      inputs:
        targetType: inline
        script: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
 
    - task: Bash@3
      displayName: Run Trivy Scan
      inputs:
        targetType: inline
        script: |
          ./bin/trivy image --severity HIGH,CRITICAL,MEDIUM --ignore-unfixed $(containerRegistry)/$(imageRepository):$(tag)
 
    - task: Docker@2
      displayName: Push Docker image to container registry
      inputs:
        command: push
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
 
    - task: Bash@3
      displayName: Log Image Details
      inputs:
        targetType: inline
        script: |
          echo "Pushed Image: $(containerRegistry)/$(imageRepository):$(tag)"
 
  - job: DeployToAKS
    displayName: Deploy to AKS
    dependsOn: BuildAndPush
    pool:
      vmImage: $(vmImageName)
    steps:
 
    - task: Bash@3
      displayName: Replace Build ID in AKS manifest
      inputs:
        targetType: inline
        script: |
          sed -i "s|#{Build.BuildId}#|$(tag)|g" azure-aks.yaml
 
    - task: KubernetesManifest@1
      displayName: Deploy to AKS
      inputs:
        action: 'deploy'
        connectionType: 'azureResourceManager'
        azureSubscriptionConnection: 'Azure subscription 1(f0ba159e-8dc5-499c-8987-b61cb8d8b554)'
        azureResourceGroup: 'azacraks'
        kubernetesCluster: 'azakscluster'
        manifests: 'azure-aks.yaml'
        rolloutStatusTimeout: '180'